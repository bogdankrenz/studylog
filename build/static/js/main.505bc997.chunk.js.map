{"version":3,"sources":["components/Navbar.js","components/StudyLog.js","components/CreateUser.js","components/EditLog.js","components/CreateLog.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","class","role","aria-label","to","aria-expanded","data-target","aria-hidden","id","Component","StudyLog","CreateUser","EditLog","CreateLog","props","onChangeUsername","bind","onChangeHeadline","onChangeDescription","onChangeDate","state","username","headline","description","date","Date","users","this","setState","e","target","value","preventDefault","log","console","window","location","onSubmit","className","ref","onChange","map","user","key","type","required","App","path","exact","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.505bc997.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default class Navbar extends Component {\n    render() {\n        return (\n            <nav class=\"navbar is-spaced is-success\" role=\"navigation\" aria-label=\"main navigation\" >\n                <div class=\"navbar-brand\">\n                    <Link class=\"navbar-item has-text-weight-bold is-size-4 has-text-black-bis\" to=\"/\">\n                        StudyLog\n                    </Link>\n\n                    <Link role=\"button\" class=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                    </Link>\n                </div>\n\n                <div id=\"navbarBasicExample\" class=\"navbar-menu\">\n                    <div class=\"navbar-start\">\n                        <Link class=\"navbar-item is-size-6\" to=\"/\">See Logs</Link>\n\n                        <div class=\"navbar-item has-dropdown is-hoverable\">\n                            <Link class=\"navbar-link\">Create and Edit</Link>\n                            <div class=\"navbar-dropdown\">\n                                <Link to=\"/user\" class=\"navbar-item\">Create User</Link>\n                                <Link class=\"navbar-item\" to=\"/create\">Create Log</Link>\n                                <Link class=\"navbar-item\">Edit Log</Link>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* <div class=\"navbar-end\">\n                        <div class=\"navbar-item\">\n                            <div class=\"buttons\">\n                                <Link class=\"button is-success\">\n                                    <strong>Sign up</strong>\n                                </Link>\n                                <Link class=\"button is-success\">Log in</Link>\n                            </div>\n                        </div>\n                    </div> */}\n                </div>\n            </nav>\n\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default class StudyLog extends Component {\n    render() {\n        return (\n            <div>\n                <p>Welcome to StudyLog</p>\n            </div>\n\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default class CreateUser extends Component {\n    render() {\n        return (\n            <div>\n                <p>Welcome to CreateUser</p>\n            </div>\n\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default class EditLog extends Component {\n    render() {\n        return (\n            <div>\n                <p>Welcome to EditLog</p>\n            </div>\n\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default class CreateLog extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangeHeadline = this.onChangeHeadline.bind(this);\n        this.onChangeDescription = this.onChangeDescription.bind(this);\n        this.onChangeDate = this.onChangeDate.bind(this);\n        this.onChangeDate = this.onChangeDate.bind(this);\n\n        this.state = {\n            username: \"\",\n            headline: \"\",\n            description: \"\",\n            date: new Date(),\n            users: []\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            users: ['test user'],\n            username: 'test user'\n        });\n    }\n\n    onChangeUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    onChangeHeadline(e) {\n        this.setState({\n            headline: e.target.value\n        });\n    }\n\n    onChangeDescription(e) {\n        this.setState({\n            description: e.target.value\n        });\n    }\n\n    onChangeDate(date) {\n        this.setState({\n            date: date\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const log = {\n            username: this.state.username,\n            headline: this.state.headline,\n            description: this.state.description,\n            date: this.state.date\n        }\n\n        console.log(log);\n\n        window.location = \"/\";\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h3>Create a new Entry</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"field\">\n                        <label className=\"label\">Username</label>\n                        <div class=\"control\">\n                            <div class=\"select\">\n                                <select ref=\"userInput\"\n                                    value={this.state.username}\n                                    onChange={this.onChangeUsername}>\n                                    {\n                                        this.state.users.map(user => {\n                                            return <option\n                                                key={user}\n                                                value={user}>{user}</option>\n                                        })\n                                    }\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"field\">\n                        <label className=\"label\">Headline</label>\n                        <input type=\"text\"\n                            required\n                            className=\"input\" />\n                    </div>\n\n                </form>\n            </div>\n\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Navbar from \"./components/Navbar\";\nimport StudyLog from \"./components/StudyLog\"\nimport CreateUser from \"./components/CreateUser\"\nimport EditLog from \"./components/EditLog\"\nimport CreateLog from \"./components/CreateLog\"\n\nfunction App() {\n  return (\n    <Router>\n      <div >\n        <Navbar />\n        <br />\n        <Route path=\"/\" exact component={StudyLog} />\n        <Route path=\"/edit/:id\" component={EditLog} />\n        <Route path=\"/create\" component={CreateLog} />\n        <Route path=\"/user\" component={CreateUser} />\n      </div>\n    </Router>\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}